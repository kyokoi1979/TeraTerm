;; ホストリストが存在しない場合はダイアログから選択
filesearch HOST_FILE
if result = 0 then
  filenamebox 'ホストリストを選択してください' 0
  HOST_FILE = inputstr
  fileopen HOST_LIST HOST_FILE 0
else
  fileopen HOST_LIST HOST_FILE 0
endif

filereadln HOST_LIST HOST_LIST_LINE
  while result = 0
    ; ホストリストの最終行に到達したら終了する
    strlen HOST_LIST_LINE
    if result = 0 Goto END

    ; ホストリストの先頭が#, TAB以外の場合、対象機器にログインする
    strmatch HOST_LIST_LINE '^#|^\t'
    if result<>1 call CONNECT_PROCESS

  ; マクロ終了
  :END
    filereadln HOST_LIST HOST_LIST_LINE
    endwhile
    fileclose HOST_LIST
    messagebox 'マクロの実行が完了しました' ''
    end
 
  ; 対象機器に接続する
  :CONNECT_PROCESS
    ;; TABを区切りとして変数に代入する
    strsplit HOST_LIST_LINE '	'
    HOST_NAME    = Groupmatchstr1
    HOST_IP_1    = Groupmatchstr2
    HOST_OS_1    = Groupmatchstr3
    HOST_USER_1  = Groupmatchstr4
    HOST_PASS_1  = Groupmatchstr5
    HOST_IP_2    = Groupmatchstr6
    HOST_OS_2    = Groupmatchstr7
    HOST_USER_2  = Groupmatchstr8
    HOST_PASS_2  = Groupmatchstr9

    ;; OSに応じて認証方法を変更する
    strmatch HOST_OS_1 'Linux'
    if result > 0 then
      PROMPT   = Linux_PROMPT
      AUTHTYPE = Linux_AUTHTYPE
    endif
    strmatch HOST_OS_1 'ESX'
    if result > 0 then
      PROMPT   = ESX_PROMPT
      AUTHTYPE = ESX_AUTHTYPE
    endif

    ;; ログの記録を行う
    gettime Log_Time '%H%M%S'
    sprintf2 Log_File '%s\%s_%s_%s_%s.log' Log_Path HOST_NAME Log_Date Log_Time Log_Str

    ;; SSHで接続する
    sprintf2 COMMAND '%s /ssh /2 /nosecuritywarning /auth=%s /user=%s /passwd=%s' HOST_IP_1 AUTHTYPE HOST_USER_1 HOST_PASS_1
    connect COMMAND

    ;; 接続失敗時はログのみ保存し、ホストリストの次の行を読み込む
    if result<>2 Then
      messagebox 'ERROR' ''
      strconcat Log_File '.error'
      filecreate ErrorLog_File Log_File
      fileclose  ErrorLog_File
      closett
      return
    endif

    restoresetup INI_FILE
    settitle HOST_NAME

    ;; 開いているログがあれば閉じて指定したファイル名でオープン
    logclose
    logopen Log_File 0 1 1 1 1

    strmatch HOST_OS_1 'Linux'
    if result > 0 then
      waitregex PROMPT
      sendln 'uname -a'

      waitregex PROMPT
      sendln 'id'

      waitregex PROMPT
      sendln 'date'

      waitregex PROMPT
      sendln 'df -Th'

      waitregex PROMPT
      sendln 'w'

      waitregex PROMPT
      sendln 'ps auxww'
    endif

    strmatch HOST_OS_1 'ESX'
    if result > 0 then
      waitregex PROMPT
      sendln 'uname -a'

      waitregex PROMPT
      sendln 'date'

      waitregex PROMPT
      sendln 'df -h'
    endif  

    ;; IP②が入力されている場合はSSHログインを実行する。
    strlen HOST_IP_2
    if result > 0 then
      strmatch HOST_OS_2 'Linux'
      if result > 0 then
        PROMPT = Linux_PROMPT
      else
        PROMPT = ESX_PROMPT
      endif

      sprintf2 CMD 'ssh -o "StrictHostKeyChecking no" %s@%s' HOST_USER_2 HOST_IP_2
      sendln CMD
      waitregex 'Password' 'password' 'パスワード'
      sendln HOST_PASS_2
      waitregex PROMPT
      sendln
    endif

    ;; コマンドリストを読み込む
    ;; コマンドリストが存在しない場合はダイアログから選択
    ;; 踏み台の有無でコマンドリストを変更する
    strlen HOST_OS_2
    if result > 0 then
      strmatch HOST_OS_2 'Linux'
      if result > 0 then
        PROMPT = Linux_PROMPT
      else
        PROMPT = ESX_PROMPT
      endif
      sprintf2 Cmd_List_File '%s_%s.list' Cmd_Path HOST_OS_2
    else
      sprintf2 Cmd_List_File '%s_%s.list' Cmd_Path HOST_OS_1
    endif 

    filesearch Cmd_List_File
    if result = 0 then
      filenamebox 'コマンドリストを選択してください' 0
      Cmd_List = inputstr
    endif

    fileopen Cmd_List Cmd_List_File 0
 
    while 1
      filereadln Cmd_List Cmd_List_Line
      if result = 1 break
 
      sendln
      flushrecv
      waitregex PROMPT
      sendln Cmd_List_Line
    endwhile
    fileclose Cmd_List
    Cmd_List_File = ''

    ; リンクを解除し、次のホストを処理する
    ; ウィンドウを閉じる場合は closett に変更する
    ;closett
    unlink
    return
